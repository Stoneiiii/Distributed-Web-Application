//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TryIt_wordfilter.client_top10 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="client_top10.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CountWord", ReplyAction="http://tempuri.org/IService1/CountWordResponse")]
        System.Collections.Generic.Dictionary<string, int> CountWord(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CountWord", ReplyAction="http://tempuri.org/IService1/CountWordResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> CountWordAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10word", ReplyAction="http://tempuri.org/IService1/Top10wordResponse")]
        string[] Top10word(System.Collections.Generic.Dictionary<string, int> dic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10word", ReplyAction="http://tempuri.org/IService1/Top10wordResponse")]
        System.Threading.Tasks.Task<string[]> Top10wordAsync(System.Collections.Generic.Dictionary<string, int> dic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTop10", ReplyAction="http://tempuri.org/IService1/GetTop10Response")]
        string[] GetTop10(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTop10", ReplyAction="http://tempuri.org/IService1/GetTop10Response")]
        System.Threading.Tasks.Task<string[]> GetTop10Async(string str);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TryIt_wordfilter.client_top10.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TryIt_wordfilter.client_top10.IService1>, TryIt_wordfilter.client_top10.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, int> CountWord(string str) {
            return base.Channel.CountWord(str);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> CountWordAsync(string str) {
            return base.Channel.CountWordAsync(str);
        }
        
        public string[] Top10word(System.Collections.Generic.Dictionary<string, int> dic) {
            return base.Channel.Top10word(dic);
        }
        
        public System.Threading.Tasks.Task<string[]> Top10wordAsync(System.Collections.Generic.Dictionary<string, int> dic) {
            return base.Channel.Top10wordAsync(dic);
        }
        
        public string[] GetTop10(string str) {
            return base.Channel.GetTop10(str);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTop10Async(string str) {
            return base.Channel.GetTop10Async(str);
        }
    }
}
